{"version":3,"sources":["actions/const.js","data-specs/accessors.js","data-specs/base.js","data-specs/global.js","data-specs/united-states.js","data-specs/utils.js","reducers/reducer.js","store.js","components/RightNav.js","pages/About.js","components/TopNavBar.js","components/NavHeader.js","components/IdSelector.js","pages/Nav.js","components/ChartTooltip.js","propTypes.js","components/utils.js","components/BaseLineChart.js","components/FormattedLineChart.js","pages/VizPage.js","App.js","actions/csv-options.js","actions/fetch-dataset.js","index.js","actions/index.js"],"names":["US","GLOBAL","CASES","path","location","dataset","dataUrl","timestampUrl","replace","withFilters","baseAccessor","reducer","data","fs","filters","filter","id","filterBefore","date","accessor","ts","Date","getTime","map","x","filteredDeaths","deaths","filteredCases","cases","deathsTimestamp","casesTimestamp","addChanges","index","y","prev","change","dayOverDayDelta","dayOverDayRate","movingAverage","n","Array","keys","offset","reduce","acc","v","mortalityRate","deathData","caseData","find","mortalityData","deathCount","caseCount","initialDate","makeSpec","label","title","group","getData","getUpdatedAt","logScale","normalizeDays","Italy","UK","Singapore","France","Spain","Germany","idGroupings","ids","abbreviations","Canada","Mexico","Brazil","Switzerland","Belgium","Netherlands","Taiwan","Japan","Australia","defaultChartId","spec","Base","California","Florida","Minnesota","Washington","Alabama","Alaska","Arizona","Arkansas","Colorado","Connecticut","Delaware","Georgia","Guam","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Mississippi","Missouri","Montana","Nebraska","Nevada","Ohio","Oklahoma","Oregon","Pennsylvania","Tennessee","Texas","Utah","Vermont","Virginia","Wisconsin","Wyoming","toNavSpec","Object","values","accum","existingPages","pages","updatedPages","initialChartState","makeInitialState","allIds","chartState","loading","makeReducer","namespace","initialState","state","action","type","value","chartId","update","globalReducer","GlobalDataSpec","usReducer","USDataSpec","combineReducers","createStore","applyMiddleware","thunkMiddleware","logger","RightNav","base","List","key","component","Typography","variant","gutterBottom","style","paddingLeft","className","Link","color","underline","NavLink","to","activeClassName","About","Container","maxWidth","target","rel","href","TopNavBar","showMenuIcon","onMenuToggle","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","flex","Button","defaultProps","link","url","text","fontSize","NavHeader","display","height","paddingTop","RouterLink","marginTop","IdSelector","props","onToggle","toggleState","newToggleState","setState","prevProps","this","deepEqual","filteredIds","onFilterToggle","icon","ListItemIcon","item","ListItem","button","ListItemText","primary","marginLeft","primaryTypographyProps","marginBottom","dense","disablePadding","fontWeight","Collapse","in","timeout","unmountOnExit","React","Component","Nav","drawerOpen","store","dispatch","split","getNamespace","pathname","global","Error","getReducer","selector","Hidden","lgUp","implementation","Drawer","anchor","open","onClose","PaperProps","width","ModalProps","keepMounted","Divider","marginRight","mdDown","withRouter","connect","ChartTooltip","xFormat","yFormat","Card","CardContent","padding","borderRadius","backgroundColor","ChartData","PropTypes","arrayOf","shape","number","shortDateFormat","objectOf","bool","isRequired","string","func","toLocaleDateString","month","day","filterZeroValues","max","xs","Math","LineChart","chart","renderChart","prevState","propChange","stateChange","cutoff","initialData","smallScreen","d","chartData","xScale","min","yScale","xAxisFormat","undefined","yAxisFormat","includes","numeral","format","gridYValues","axisLeftTickValues","bottomLegend","toLowerCase","slice","length","axisBottom","orient","tickSize","tickPadding","tickRotation","tickValues","legend","legendOffset","legendPosition","axisLeft","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","margin","top","right","bottom","left","colors","scheme","isInteractive","lineWidth","pointSize","useMesh","enableGridX","enableCrosshair","tooltip","point","serieId","xFormatted","yFormatted","xInt","parseInt","year","longDateFormat","toString","legends","setTimeout","FormattedLineChart","updatedAt","logScaleToggle","normalizeDaysToggle","onControlToggle","timePart","toLocaleTimeString","hour12","hour","minute","datePart","updatedAtString","fontStyle","FormGroup","row","flexDirection","FormControlLabel","control","Switch","size","checked","onChange","disabled","Paper","xsDown","disableGutters","BaseLineChart","smUp","textAlign","match","globalSpec","usSpec","getSpec","basePath","render","content","chartSpec","justifyContent","CircularProgress","App","basename","exact","VizPage","globalConfig","columnMap","Lat","Long","idMap","usConfig","UID","iso2","iso3","code3","FIPS","Admin2","Province_State","Country_Region","Long_","Combined_Key","Population","csvOptions","mapHeaders","header","prototype","hasOwnProperty","call","test","console","warn","mapValues","isNaN","isDateString","s","numberKeys","obj","combineRowsById","prevValue","nextValue","createDataArray","fetchData","fetch","then","res","options","parseCsv","csv","fetchTimestamp","json","commit","committer","catch","err","error","Promise","all","rows","timestamp","ReactDOM","document","getElementById","fetchDataset"],"mappings":"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YAAa,KACbC,QAAS,KACTC,YAAa,KACbZ,UAAW,KACXa,OAAQ,KACRC,MAAO,KACP,cAAe,KACfC,UAAW,MAIEC,EDpDe,oBCqDjBC,EAAOC,EAAc,UCtErBpE,EAAU,CACrBqE,YAAY,EACZC,SAAS,EACTC,WAAW,EACX,YAAY,EACZC,YAAY,GAGDlB,EAAc,CACzB,CACEb,MAAO,YACPc,IAAK,CACH,QACA,gBACA,UACA,gBACA,WACA,eACA,cACA,aACA,iBAGJ,CACEd,MAAO,UACPc,IAAK,CACH,OACA,WACA,UACA,WACA,YACA,YACA,eACA,eACA,WACA,OACA,SACA,aAGJ,CACEd,MAAO,YACPc,IAAK,CACH,WACA,WACA,uBACA,gBACA,WACA,WACA,YACA,iBACA,iBACA,UACA,UACA,UACA,gBAGJ,CACEd,MAAO,QACPc,IAAK,CACH,WACA,YACA,WACA,UAGJ,CACEd,MAAO,WACPc,IAAK,CACH,UACA,QACA,UACA,SACA,OACA,WACA,UACA,eAGJ,CACEd,MAAO,OACPc,IAAK,CACH,aACA,SACA,aACA,SACA,WAGJ,CACEd,MAAO,uBACPc,IAAK,CACH,iBACA,OACA,2BACA,cACA,oBAKOC,EAAgB,CAC3BiB,QAAS,KACTC,OAAQ,KACR,iBAAkB,KAClBC,QAAS,KACTC,SAAU,KACVP,WAAY,KACZQ,SAAU,KACVC,YAAa,KACbC,SAAU,KACV,uBAAwB,KACxBT,QAAS,KACTU,QAAS,KACTC,KAAM,KACNC,OAAQ,KACRC,MAAO,KACPC,SAAU,KACVC,QAAS,KACTC,KAAM,KACNC,OAAQ,KACRC,SAAU,KACVC,UAAW,KACXC,MAAO,KACPC,SAAU,KACVC,cAAe,KACfC,SAAU,KACVtB,UAAW,KACXuB,YAAa,KACbC,SAAU,KACVC,QAAS,KACTC,SAAU,KACVC,OAAQ,KACR,gBAAiB,KACjB,aAAc,KACd,aAAc,KACd,WAAY,KACZ,iBAAkB,KAClB,eAAgB,KAChB,2BAA4B,KAC5BC,KAAM,KACNC,SAAU,KACVC,OAAQ,KACRC,aAAc,KACd,cAAe,KACf,eAAgB,KAChB,iBAAkB,KAC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","file":"static/js/main.2d66e821.chunk.js","sourcesContent":["// locations\nexport const US = 'US';\nexport const GLOBAL = 'global';\n\n// datasets\nexport const DEATHS = 'deaths';\nexport const CASES = 'confirmed';\n\nexport const OWNER = 'CSSEGISandData';\nexport const REPO = 'COVID-19';\n\nconst BASE_DATA_URL = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master';\nconst BASE_TIMESTAMP_URL = 'https://api.github.com/repos/CSSEGISandData/COVID-19/commits';\n\nconst BASE_PATH = 'csse_covid_19_data/csse_covid_19_time_series';\n\n// helpers\nexport const path = (location, dataset) => `${BASE_PATH}/time_series_covid19_${dataset}_${location}.csv`;\nexport const dataUrl = (location, dataset) => `${BASE_DATA_URL}/${path(location, dataset)}`;\n\nconst f = (s) => s.replace(/\\//g, '%2F');\nexport const timestampUrl = (location, dataset) => `${BASE_TIMESTAMP_URL}?path=${f(path(location, dataset))}&page=1&per_page=1&ref=master`;\n\n// data\nexport const GLOBAL_DEATHS_URL = dataUrl(GLOBAL, DEATHS);\nexport const GLOBAL_CASES_URL = dataUrl(GLOBAL, CASES);\n\n// timestamps\nexport const GLOBAL_DEATHS_TIMESTAMP_URL = timestampUrl(GLOBAL, DEATHS);\nexport const GLOBAL_CASES_TIMESTAMP_URL = timestampUrl(GLOBAL, CASES);\n","/*\n  Assumes reducer shape of\n  {\n    cases: ChartData,\n    casesTimestamp: string,\n    deaths: ChartData,\n    deathsTimestamp, string,\n    filters: {string: bool}\n  }\n*/\n\n// base accessors\nexport const deaths = (reducer) => reducer.deaths;\nexport const cases = (reducer) => reducer.cases;\n\n// TODO: reducer should be made generic\nconst filters = (reducer) => reducer.filters;\n\nconst withFilters = (baseAccessor) => (reducer) => {\n  const data = baseAccessor(reducer);\n  const fs = filters(reducer);\n\n  return data.filter(({ id }) => fs[id]);\n};\n\nexport const filterBefore = (date) => (accessor) => (reducer) => {\n  const ts = new Date(date).getTime();\n\n  return accessor(reducer).map(({ id, data }) => ({\n    id,\n    data: data.filter(({ x }) => x >= ts),\n  }));\n};\n\nexport const filteredDeaths = withFilters(deaths);\nexport const filteredCases = withFilters(cases);\n\nexport const deathsTimestamp = (reducer) => reducer.deathsTimestamp;\nexport const casesTimestamp = (reducer) => reducer.casesTimestamp;\n\nconst addChanges = ({ id, data }) => {\n  const changes = data.map(({ x, y }, index) => {\n    const prev = data[index - 1];\n    const change = index === 0 ? 0 : y - prev.y;\n\n    return { x, y, change };\n  });\n\n  return { id, data: changes };\n};\n\nexport const dayOverDayDelta = (accessor) => (reducer) => accessor(reducer)\n  .map(addChanges)\n  .map(\n    ({ id, data }) => {\n      const mapped = data.map(({ x, change }) => ({ x, y: change }));\n      return { id, data: mapped };\n    },\n  );\n\nexport const dayOverDayRate = (accessor) => (reducer) => accessor(reducer)\n  .map(addChanges)\n  .map(\n    ({ id, data }) => {\n      const mapped = data.map(({ x, y, change }) => ({ x, y: y === 0 ? 0 : change / y }));\n      return { id, data: mapped };\n    },\n  );\n\nexport const movingAverage = (n) => (accessor) => (reducer) => accessor(reducer)\n  .map(({ id, data }) => {\n    const averages = data.map(({ x }, index) => {\n      if (index < 6) {\n        return { x, y: null };\n      }\n\n      const prevVals = [...Array(n).keys()].map((offset) => data[index - offset].y);\n      const avg = prevVals.reduce((acc, v) => acc + v, 0) / n;\n\n      return { x, y: avg };\n    });\n\n    return { id, data: averages };\n  });\n\nexport const mortalityRate = (reducer) => filteredDeaths(reducer).map(({ id, data: deathData }) => {\n  // TODO: inefficient to filter cases every map\n  const caseData = filteredCases(reducer).find((x) => x.id === id).data;\n\n  const mortalityData = deathData.map(({ x, y: deathCount }, index) => {\n    const caseCount = caseData[index].y;\n    const rate = caseCount === 0 ? 0 : deathCount / caseCount;\n    return { x, y: rate };\n  });\n\n  return { id, data: mortalityData };\n});\n","// import React from 'react';\n//\n// import DataTable from '../components/DataTable';\n\nimport {\n  filteredCases,\n  filteredDeaths,\n  deathsTimestamp,\n  casesTimestamp,\n  filterBefore,\n  dayOverDayDelta,\n  dayOverDayRate,\n  movingAverage,\n  mortalityRate,\n} from './accessors';\n\n// Best data after this\nconst initialDate = new Date('3/1/2020');\n\nexport const defaultChartId = 'deaths-cumulative';\n\nexport const makeSpec = (label) => ({\n  // deaths\n  'deaths-cumulative': {\n    title: `Cumulative ${label} Deaths`,\n    group: 'Deaths',\n    label: 'Cumulative Count',\n    getData: filterBefore(initialDate)(filteredDeaths),\n    getUpdatedAt: deathsTimestamp,\n    logScale: true,\n    normalizeDays: 10,\n  },\n  'deaths-daily': {\n    title: `Daily ${label} Deaths`,\n    group: 'Deaths',\n    label: 'Daily Count',\n    getData: dayOverDayDelta(filterBefore(initialDate)(filteredDeaths)),\n    getUpdatedAt: deathsTimestamp,\n    logScale: true,\n  },\n  'deaths-change-rate': {\n    title: `${label} Deaths Daily Rate of Change (7 Day Average)`,\n    group: 'Deaths',\n    label: 'Rate of Change',\n    getData: filterBefore(initialDate)(movingAverage(7)(dayOverDayRate(filteredDeaths))),\n    getUpdatedAt: deathsTimestamp,\n  },\n\n  // cases\n  'cases-cumulative': {\n    title: `Cumulative ${label} Cases`,\n    group: 'Cases',\n    label: 'Cumulative Count',\n    getData: filterBefore(initialDate)(filteredCases),\n    getUpdatedAt: casesTimestamp,\n    logScale: true,\n    normalizeDays: 50,\n  },\n  'cases-daily': {\n    title: `Daily ${label} Cases`,\n    group: 'Cases',\n    label: 'Daily Count',\n    getData: dayOverDayDelta(filterBefore(initialDate)(filteredCases)),\n    getUpdatedAt: casesTimestamp,\n    logScale: true,\n  },\n  'cases-change-rate': {\n    title: `${label} Cases Daily Rate of Change (7 Day Average)`,\n    group: 'Cases',\n    label: 'Rate of Change',\n    getData: filterBefore(initialDate)(movingAverage(7)(dayOverDayRate(filteredCases))),\n    getUpdatedAt: casesTimestamp,\n  },\n\n  // other\n  'mortality-rate': {\n    title: `${label} Mortality Rate`,\n    group: 'Other',\n    label: 'Mortality Rate',\n    getData: filterBefore(initialDate)(mortalityRate),\n    // TODO: should really take most recent of the two\n    getUpdatedAt: deathsTimestamp,\n  },\n  // heatmap: {\n  //   title: `${label} Case Heatmap`,\n  //   group: 'Other',\n  //   label: 'Case Heatmap',\n  //   component: (reducer) => <DataTable reducer={reducer} />,\n  // },\n});\n","import * as Base from './base';\n\n// export const INITIAL_FILTERS\n\nexport const filters = {\n  Italy: true,\n  US: true,\n  UK: true,\n  Singapore: true,\n  France: false,\n  Spain: false,\n  Germany: false,\n  'S. Korea': false,\n};\n\nexport const idGroupings = [\n  {\n    label: 'Americas',\n    ids: [\n      'US',\n      'Canada',\n      'Mexico',\n      'Brazil',\n    ],\n  },\n  {\n    label: 'Europe',\n    ids: [\n      'UK',\n      'Spain',\n      'France',\n      'Germany',\n      'Italy',\n      'Switzerland',\n      'Belgium',\n      'Netherlands',\n    ],\n  },\n  {\n    label: 'APAC',\n    ids: [\n      'Singapore',\n      'Taiwan',\n      'Japan',\n      'South Korea',\n      'Australia',\n    ],\n  },\n];\n\nexport const abbreviations = {\n  US: 'US',\n  Canada: 'CA',\n  Mexico: 'MX',\n  Brazil: 'BR',\n  UK: 'UK',\n  Spain: 'ES',\n  France: 'FR',\n  Germany: 'DE',\n  Italy: 'IT',\n  Switzerland: 'CH',\n  Belgium: 'BE',\n  Netherlands: 'NL',\n  Singapore: 'SG',\n  Taiwan: 'TW',\n  Japan: 'JP',\n  'South Korea': 'SK',\n  Australia: 'AU',\n};\n\n\nexport const { defaultChartId } = Base;\nexport const spec = Base.makeSpec('Global');\n","import * as Base from './base';\n\nexport const filters = {\n  California: true,\n  Florida: true,\n  Minnesota: true,\n  'New York': true,\n  Washington: true,\n};\n\nexport const idGroupings = [\n  {\n    label: 'Northeast',\n    ids: [\n      'Maine',\n      'New Hampshire',\n      'Vermont',\n      'Massachusetts',\n      'New York',\n      'Rhode Island',\n      'Connecticut',\n      'New Jersey',\n      'Pennsylvania',\n    ],\n  },\n  {\n    label: 'Midwest',\n    ids: [\n      'Ohio',\n      'Michigan',\n      'Indiana',\n      'Illinois',\n      'Wisconsin',\n      'Minnesota',\n      'North Dakota',\n      'South Dakota',\n      'Nebraska',\n      'Iowa',\n      'Kansas',\n      'Missouri',\n    ],\n  },\n  {\n    label: 'Southeast',\n    ids: [\n      'Maryland',\n      'Delaware',\n      'District of Columbia',\n      'West Virginia',\n      'Virginia',\n      'Kentucky',\n      'Tennessee',\n      'North Carolina',\n      'South Carolina',\n      'Georgia',\n      'Florida',\n      'Alabama',\n      'Mississippi',\n    ],\n  },\n  {\n    label: 'South',\n    ids: [\n      'Arkansas',\n      'Louisiana',\n      'Oklahoma',\n      'Texas',\n    ],\n  },\n  {\n    label: 'Mountain',\n    ids: [\n      'Montana',\n      'Idaho',\n      'Wyoming',\n      'Nevada',\n      'Utah',\n      'Colorado',\n      'Arizona',\n      'New Mexico',\n    ],\n  },\n  {\n    label: 'West',\n    ids: [\n      'California',\n      'Oregon',\n      'Washington',\n      'Alaska',\n      'Hawaii',\n    ],\n  },\n  {\n    label: 'Other US Territories',\n    ids: [\n      'American Samoa',\n      'Guam',\n      'Northern Mariana Islands',\n      'Puerto Rico',\n      'Virgin Islands',\n    ],\n  },\n];\n\nexport const abbreviations = {\n  Alabama: 'AL',\n  Alaska: 'AK',\n  'American Samoa': 'AS',\n  Arizona: 'AZ',\n  Arkansas: 'AR',\n  California: 'CA',\n  Colorado: 'CO',\n  Connecticut: 'CT',\n  Delaware: 'DE',\n  'District of Columbia': 'DC',\n  Florida: 'FL',\n  Georgia: 'GA',\n  Guam: 'GU',\n  Hawaii: 'HI',\n  Idaho: 'ID',\n  Illinois: 'IL',\n  Indiana: 'IN',\n  Iowa: 'IA',\n  Kansas: 'KS',\n  Kentucky: 'KY',\n  Louisiana: 'LA',\n  Maine: 'ME',\n  Maryland: 'MD',\n  Massachusetts: 'MA',\n  Michigan: 'MI',\n  Minnesota: 'MN',\n  Mississippi: 'MS',\n  Missouri: 'MO',\n  Montana: 'MT',\n  Nebraska: 'NE',\n  Nevada: 'NV',\n  'New Hampshire': 'NH',\n  'New Jersey': 'NJ',\n  'New Mexico': 'NM',\n  'New York': 'NY',\n  'North Carolina': 'NC',\n  'North Dakota': 'ND',\n  'Northern Mariana Islands': 'OH',\n  Ohio: 'OK',\n  Oklahoma: 'OR',\n  Oregon: 'PW',\n  Pennsylvania: 'PA',\n  'Puerto Rico': 'PR',\n  'Rhode Island': 'RI',\n  'South Carolina': 'SC',\n  'South Dakota': 'SD',\n  Tennessee: 'TN',\n  Texas: 'TX',\n  Utah: 'UT',\n  Vermont: 'VT',\n  'Virgin Islands': 'VI',\n  Virginia: 'VA',\n  Washington: 'WA',\n  'West Virginia': 'WV',\n  Wisconsin: 'WI',\n  Wyoming: 'WY',\n};\n\nexport const { defaultChartId } = Base;\nexport const spec = Base.makeSpec('US');\n","export const toNavSpec = (spec) => Object.values(Object.keys(spec).reduce((accum, id) => {\n  const { group, label } = spec[id];\n  const existingPages = accum[group] ? accum[group].pages : [];\n  const updatedPages = [...existingPages, { id, label }];\n\n  return {\n    ...accum,\n    [group]: { group, pages: updatedPages },\n  };\n}, {}));\n\nexport const initialChartState = (spec) => Object.keys(spec).reduce((accum, id) => ({\n  ...accum,\n  // logScale always false for now, allow users to toggle on\n  // normalizeDays always false for now, allow users to toggle on\n  [id]: { logScale: false, normalizeDays: false },\n}), {});\n","import { GLOBAL, US } from '../actions/const';\nimport * as GlobalDataSpec from '../data-specs/global';\nimport * as USDataSpec from '../data-specs/united-states';\n\nimport { initialChartState } from '../data-specs/utils';\n\nconst makeInitialState = ({\n  filters, spec, idGroupings, abbreviations,\n}) => ({\n  cases: null,\n  casesTimestamp: null,\n  deaths: null,\n  deathsTimestamp: null,\n  allIds: null,\n  filters,\n  idGroupings,\n  abbreviations,\n  chartState: initialChartState(spec),\n  loading: true,\n});\n\nconst makeReducer = (namespace, initialState) => (state = initialState, action) => {\n  switch (action.type) {\n    case `${namespace}_FETCHED_DATASET_deaths`:\n      return {\n        ...state,\n        deaths: action.value,\n      };\n\n    case `${namespace}_FETCHED_DATASET_confirmed`:\n      return {\n        ...state,\n        allIds: action.value.map((x) => x.id),\n        cases: action.value,\n      };\n\n    case `${namespace}_FETCHED_TIMESTAMP_deaths`:\n      return {\n        ...state,\n        deathsTimestamp: action.value,\n      };\n\n    case `${namespace}_FETCHED_TIMESTAMP_confirmed`:\n      return {\n        ...state,\n        casesTimestamp: action.value,\n      };\n\n    case `${namespace}_TOGGLE_ID_FILTER`:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.id]: !state.filters[action.id],\n        },\n      };\n\n    case `${namespace}_FORM_CONTROL_TOGGLE`:\n      return {\n        ...state,\n        chartState: {\n          ...state.chartState,\n          [action.value.chartId]: {\n            ...state.chartState[action.value.chartId],\n            ...action.value.update,\n          },\n        },\n      };\n\n    case `${namespace}_DATA_LOADED`:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    default: return state;\n  }\n};\n\nexport const globalReducer = makeReducer(GLOBAL, makeInitialState(GlobalDataSpec));\nexport const usReducer = makeReducer(US, makeInitialState(USDataSpec));\n","import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport { globalReducer, usReducer } from './reducers/reducer';\nimport { GLOBAL, US } from './actions/const';\n\nconst reducer = combineReducers({\n  [GLOBAL]: globalReducer,\n  [US]: usReducer,\n});\n\nexport default createStore(\n  reducer,\n  applyMiddleware(\n    thunkMiddleware,\n    logger,\n  ),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport List from '@material-ui/core/List';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nconst propTypes = {\n  spec: PropTypes.arrayOf(\n    PropTypes.shape({\n      group: PropTypes.string.isRequired,\n      pages: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          label: PropTypes.string.isRequired,\n        }),\n      ).isRequired,\n    }),\n  ).isRequired,\n  base: PropTypes.string.isRequired,\n};\n\n// <List component=\"nav\" dense\n//    subheader={<ListSubheader disableSticky component=\"div\">Deaths</ListSubheader>}>\n//   <ListItem button><ListItemText primary=\"Cumulative\" /></ListItem>\n//   <ListItem button><ListItemText primary=\"Daily\" /></ListItem>\n//   <ListItem button><ListItemText primary=\"Rate of Change\" /></ListItem>\n//   <ListItem button><ListItemText primary=\"Per Capita\" /></ListItem>\n// </List>\n// <List component=\"nav\" dense\n//    subheader={<ListSubheader disableSticky component=\"div\">Cases</ListSubheader>}>\n//   <ListItem button><ListItemText primary=\"Cumulative\" /></ListItem>\n//   <ListItem button><ListItemText primary=\"Daily\" /></ListItem>\n//   <ListItem button><ListItemText primary=\"Rate of Change\" /></ListItem>\n//   <ListItem button><ListItemText primary=\"Per Capita\" /></ListItem>\n// </List>\n// <List component=\"nav\" dense\n//    subheader={<ListSubheader disableSticky component=\"div\">Other</ListSubheader>}>\n//   <ListItem button><ListItemText primary=\"Mortality rate\" /></ListItem>\n//   <ListItem button><ListItemText primary=\"Full table\" /></ListItem>\n// </List>\n\nconst RightNav = ({ spec, base }) => (\n  <div id=\"right-nav\">\n    {spec.map(({ group, pages }) => (\n      <List\n        key={group}\n        component=\"nav\"\n      >\n        <Typography variant=\"body1\" gutterBottom style={{ paddingLeft: '12px' }}>{group}</Typography>\n        {pages.map(({ id, label }) => (\n          <li className=\"right-nav-item\" key={id}>\n            <Link\n              color=\"textSecondary\"\n              underline=\"none\"\n              variant=\"body1\"\n              component={NavLink}\n              to={`${base}/${id}`}\n              activeClassName=\"active\"\n            >\n              {label}\n            </Link>\n          </li>\n        ))}\n      </List>\n    ))}\n  </div>\n);\n\nRightNav.propTypes = propTypes;\n\nexport default RightNav;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nimport RightNav from '../components/RightNav';\n\nconst About = () => (\n  <div id=\"main-container\">\n    <Container maxWidth=\"sm\" id=\"main-content\">\n      <Typography variant=\"h4\" gutterBottom>\n        About This Project\n      </Typography>\n      <Typography variant=\"body2\" gutterBottom>\n        As the coronavirus spreads across the world,\n        it can be hard to keep up with the day to day impact,\n        as well as the variance of impact around the world.\n        The goal of this project is to provide detailed but easy\n        to understand visualizations to help people follow this pandemic.\n      </Typography>\n      <Typography variant=\"body2\" gutterBottom>\n        Most charts provided offer multiple views. You can toggle log scale\n        or visualize growth normalized by days since 50 cases in a specific region.\n        There are also different cuts, such as cumulative growth or rate of change.\n      </Typography>\n      <Typography variant=\"body2\">\n        Not sure where to start? Try one of these:\n      </Typography>\n      <ul>\n        <li>\n          <Link\n            variant=\"body2\"\n            component={NavLink}\n            to=\"global/deaths-cumulative\"\n          >\n            Cumulative Global Deaths\n          </Link>\n        </li>\n        <li>\n          <Link\n            variant=\"body2\"\n            component={NavLink}\n            to=\"united-states/cases-cumulative\"\n          >\n            Cumulative US Cases\n          </Link>\n        </li>\n      </ul>\n      <Typography variant=\"h5\" gutterBottom>Data</Typography>\n      <Typography variant=\"body2\" gutterBottom>\n        All data provided by Center for Systems Science and Engineering at Johns Hopkins University\n        (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/CSSEGISandData/COVID-19\">source</a>\n        ).\n      </Typography>\n      <Typography variant=\"body2\" gutterBottom>\n        The underlying datasets from Johns Hopkins University are updated roughly every 12 hours,\n        and all visualizations will show when the data was last updated.\n      </Typography>\n      <Typography variant=\"h5\" gutterBottom>Questions or Feedback?</Typography>\n      <Typography variant=\"body2\" gutterBottom>\n        Tweet me at\n        {' '}\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/TyGuyO\">@tyguyo</a>\n        {', '}\n        or open an issue on\n        {' '}\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/TGOlson/covid-viz\">GitHub</a>\n        .\n      </Typography>\n    </Container>\n    <RightNav base=\"/\" spec={[]} />\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst propTypes = {\n  showMenuIcon: PropTypes.bool,\n  onMenuToggle: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  showMenuIcon: false,\n};\n\nconst TopNavBar = ({ showMenuIcon, onMenuToggle }) => (\n  <AppBar position=\"fixed\" color=\"default\" id=\"top-nav\">\n    <Toolbar>\n      {showMenuIcon ? (\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={onMenuToggle}\n        >\n          <MenuIcon />\n        </IconButton>\n      ) : null}\n      <div style={{ flex: 'auto' }} />\n      <Button color=\"inherit\" component={NavLink} activeClassName=\"active\" to=\"/\">About</Button>\n      <Button color=\"inherit\" component={NavLink} activeClassName=\"active\" to=\"/global\">Global</Button>\n      <Button color=\"inherit\" component={NavLink} activeClassName=\"active\" to=\"/united-states\">United States</Button>\n    </Toolbar>\n  </AppBar>\n);\n// <Button color=\"inherit\" component={Link} to=\"/experiments\">Experiments</Button>\n\nTopNavBar.propTypes = propTypes;\nTopNavBar.defaultProps = defaultProps;\n\nexport default TopNavBar;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nconst link = (url, text) => (\n  <Link\n    href={url}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    color=\"textSecondary\"\n    variant=\"body2\"\n    style={{ fontSize: '12px' }}\n  >\n    {text}\n  </Link>\n);\n\nconst NavHeader = () => (\n  <div style={{ display: 'flex' }}>\n    <div style={{\n      height: '58px',\n      paddingLeft: '16px',\n      paddingTop: '6px',\n    }}\n    >\n      <Link component={RouterLink} to=\"/\" color=\"textSecondary\" variant=\"h6\" style={{ marginTop: '6px' }}>Covid Dashboard</Link>\n      <div>\n        {link('https://twitter.com/TyGuyO', '@tyguyo')}\n        <Typography component=\"span\" color=\"textSecondary\" variant=\"body2\" style={{ fontSize: '12px' }}> / </Typography>\n        {link('https://github.com/TGOlson/covid-viz', 'GitHub')}\n      </div>\n    </div>\n  </div>\n);\n\nexport default NavHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport deepEqual from 'deep-equal';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport CheckIcon from '@material-ui/icons/Check';\n\nconst propTypes = {\n  filteredIds: PropTypes.objectOf(PropTypes.bool).isRequired,\n  idGroupings: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onFilterToggle: PropTypes.func.isRequired,\n};\n\nclass IdSelector extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const toggleState = props.idGroupings.reduce((accum, { label }) => ({\n      ...accum,\n      [label]: true,\n    }), {});\n\n    this.state = { toggleState };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { idGroupings } = this.props;\n\n    // TODO: should really be moved to reducer state to avoid this checking\n    // this also create a UI jumping bug\n    const groupingChange = !deepEqual(prevProps.idGroupings, idGroupings);\n\n    if (groupingChange) {\n      const toggleState = idGroupings.reduce((accum, { label }) => ({\n        ...accum,\n        [label]: true,\n      }), {});\n\n      this.setState({ toggleState });\n    }\n  }\n\n  onToggle = (label) => {\n    const { toggleState } = this.state;\n    const newToggleState = {\n      ...toggleState,\n      [label]: !toggleState[label],\n    };\n\n    this.setState({\n      toggleState: newToggleState,\n    });\n  }\n\n\n  render() {\n    const { filteredIds, idGroupings, onFilterToggle } = this.props;\n    const { toggleState } = this.state;\n\n    const icon = <ListItemIcon><CheckIcon color=\"primary\" fontSize=\"small\" /></ListItemIcon>;\n\n    const item = (id) => (\n      <ListItem key={id} button onClick={() => onFilterToggle(id)}>\n        <ListItemText key={id} primary={id} style={{ marginLeft: '24px' }} primaryTypographyProps={{ variant: 'body2' }} />\n        {filteredIds[id] ? icon : null}\n      </ListItem>\n    );\n\n    return (\n      <div style={{ marginTop: '12px', marginBottom: '36px' }}>\n        {idGroupings.map(({ label, ids }) => (\n          <List component=\"nav\" key={label} dense disablePadding>\n            <ListItem button onClick={() => this.onToggle(label)}>\n              <ListItemText\n                primary={label}\n                style={{ marginLeft: '6px' }}\n                primaryTypographyProps={{ variant: 'body2', style: { fontWeight: 500 } }}\n              />\n            </ListItem>\n            <Collapse in={toggleState[label]} timeout=\"auto\" unmountOnExit>\n              <List component=\"nav\" dense disablePadding>\n                {ids.map(item)}\n              </List>\n            </Collapse>\n          </List>\n        ))}\n      </div>\n    );\n  }\n}\n\nIdSelector.propTypes = propTypes;\n\nexport default IdSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport TopNavBar from '../components/TopNavBar';\nimport NavHeader from '../components/NavHeader';\nimport IdSelector from '../components/IdSelector';\nimport { GLOBAL, US } from '../actions/const';\n\nconst propTypes = {\n  // allCountries: PropTypes.arrayOf(PropTypes.string),\n  // filters: PropTypes.objectOf(PropTypes.bool).isRequired,\n  store: PropTypes.any.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n  }).isRequired,\n};\n\nconst defaultProps = {\n  // allCountries: null,\n};\n\n// TODO: should pass some state around!\n// Think this would include hooking react-router into the store\nconst getNamespace = (path) => {\n  switch (path.split('/')[1]) {\n    case 'global': return GLOBAL;\n    case 'united-states': return US;\n    default: return null; // Expected for non-data pages\n  }\n};\n\nconst getReducer = (namespace, store) => {\n  switch (namespace) {\n    case GLOBAL: return store.global;\n    case US: return store.US; // TODO;\n    default: throw new Error(`Unexpected match fail 'getReducer': ${namespace}`);\n  }\n};\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      drawerOpen: false,\n    };\n  }\n\n  onMenuToggle = () => {\n    const { drawerOpen } = this.state;\n\n    this.setState({\n      drawerOpen: !drawerOpen,\n    });\n  }\n\n  render() {\n    const { store, dispatch, location } = this.props;\n    const { drawerOpen } = this.state;\n\n    // TODO: this is a pretty sketchy way to inspect store state\n    const namespace = getNamespace(location.pathname);\n    const reducer = namespace && getReducer(namespace, store);\n    const { filters, idGroupings } = reducer || {}; // allIds available as well\n\n    const onFilterToggle = (id) => dispatch({\n      type: `${namespace}_TOGGLE_ID_FILTER`,\n      id,\n    });\n\n    const selector = reducer\n      ? (\n        <IdSelector\n          filteredIds={filters}\n          idGroupings={idGroupings}\n          onFilterToggle={onFilterToggle}\n        />\n      )\n      : null;\n\n    return (\n      <div>\n        <Hidden lgUp implementation=\"css\">\n          <TopNavBar showMenuIcon onMenuToggle={this.onMenuToggle} />\n          <Drawer\n            variant=\"temporary\"\n            anchor=\"left\"\n            open={drawerOpen}\n            onClose={this.onMenuToggle}\n            PaperProps={{ style: { width: '240px' } }}\n            ModalProps={{ keepMounted: true }}\n          >\n            <NavHeader />\n            <Divider style={{ marginRight: '24px' }} />\n            {selector}\n          </Drawer>\n        </Hidden>\n        <Hidden mdDown implementation=\"css\">\n          <TopNavBar onMenuToggle={this.onMenuToggle} />\n          <Drawer\n            variant=\"permanent\"\n            open\n            style={{ width: '240px' }}\n            PaperProps={{ style: { width: '240px' } }}\n          >\n            <NavHeader />\n            <Divider style={{ marginRight: '24px' }} />\n            {selector}\n          </Drawer>\n        </Hidden>\n      </div>\n    );\n  }\n}\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\n\nconst mapStateToProps = (store) => ({ store });\n\nexport default withRouter(connect(mapStateToProps)(Nav));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  xFormat: PropTypes.func,\n  yFormat: PropTypes.func,\n  x: PropTypes.string.isRequired,\n  y: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n  xFormat: (x) => x,\n  yFormat: (x) => x,\n};\n\n// TODO: format numbers\nconst ChartTooltip = ({\n  id, color, xFormat, yFormat, x, y,\n}) => (\n  <Card variant=\"outlined\">\n    <CardContent style={{ padding: '8px 8px 6px' }}>\n      <div style={{ marginBottom: '2px' }}>\n        <span style={{\n          width: '12px',\n          height: '12px',\n          borderRadius: '6px',\n          backgroundColor: color,\n          display: 'inline-block',\n          marginRight: '6px',\n        }}\n        />\n        <Typography variant=\"body2\" component=\"span\" style={{ fontWeight: 500 }} gutterBottom>{id}</Typography>\n      </div>\n      <Typography variant=\"body2\">{xFormat(x)}</Typography>\n      <Typography variant=\"body2\">{yFormat(y)}</Typography>\n    </CardContent>\n  </Card>\n);\n\nChartTooltip.propTypes = propTypes;\nChartTooltip.defaultProps = defaultProps;\n\nexport default ChartTooltip;\n","import PropTypes from 'prop-types';\n\nexport const ChartData = PropTypes.arrayOf(\n  PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }),\n);\n\nexport const Reducer = PropTypes.shape({\n  cases: ChartData,\n  deaths: ChartData,\n  filters: PropTypes.objectOf(PropTypes.bool).isRequired,\n  chartState: PropTypes.objectOf(\n    PropTypes.shape({\n      logScale: PropTypes.bool,\n      normalizeDays: PropTypes.bool,\n    }),\n  ).isRequired,\n});\n\nexport const ChartSpec = PropTypes.shape({\n  title: PropTypes.string,\n  group: PropTypes.string,\n  label: PropTypes.string,\n  getData: PropTypes.func,\n  getUpdatedAt: PropTypes.func,\n  logScale: PropTypes.bool,\n  normalizeDays: PropTypes.number,\n});\n","export const shortDateFormat = (x) => new Date(x).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\nexport const longDateFormat = (x) => new Date(x).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ResponsiveLine } from '@nivo/line';\nimport deepEqual from 'deep-equal';\nimport numeral from 'numeral';\n\nimport ChartTooltip from './ChartTooltip';\nimport { ChartData } from '../propTypes';\n\nimport { shortDateFormat, longDateFormat } from './utils';\n\nconst propTypes = {\n  data: ChartData.isRequired,\n  logScale: PropTypes.bool,\n  normalizeDays: PropTypes.number,\n  group: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  smallScreen: PropTypes.bool,\n  abbreviations: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nconst defaultProps = {\n  logScale: false,\n  normalizeDays: null,\n  smallScreen: false,\n};\n\nconst mapNormalizeDays = (cutoff, values) => values.map((item) => {\n  const data = item.data\n    .filter(({ y }) => y >= cutoff)\n    .map(({ y }, index) => ({ x: index, y }));\n\n  return { ...item, data };\n});\n\nconst filterZeroValues = ({ id, data }) => ({\n  id,\n  data: data.filter(({ y }) => y > 0),\n});\n\nconst max = (xs) => Math.max(...xs);\nconst maxVal = (chartData) => max(\n  chartData.map(\n    ({ data }) => max(data.map(({ y }) => y)),\n  ),\n);\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chart: null,\n    };\n  }\n\n  // A little trickery in these lifecycle methods in order to render the chart\n  // outside of the current render cycle.\n  // Chart is slow and heavy to re-render,\n  // so we want to avoid batching with other updates that should be fast\n  componentDidMount() {\n    this.renderChart();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const propChange = !deepEqual(prevProps, this.props);\n\n    // This is a little sketchy... we need to see if state changed but comparing the\n    // chart would lead to an infinite loop\n    // (because state changes lead to chart changes lead to state changes)\n    // So as a quick fix just remove the chart value for comparison\n    const stateChange = !deepEqual({ ...prevState, chart: null }, { ...this.state, chart: null });\n\n    if (propChange || stateChange) {\n      this.renderChart();\n    }\n  }\n\n  renderChart() {\n    const {\n      data: initialData, logScale, normalizeDays, group, smallScreen, label, abbreviations,\n    } = this.props;\n\n\n    let data = initialData;\n    if (normalizeDays) {\n      data = mapNormalizeDays(normalizeDays, data);\n    }\n\n    if (logScale) {\n      // filter zero values\n      data = data.map(filterZeroValues);\n    }\n\n    if (smallScreen) {\n      data = data.map((d) => (abbreviations[d.id] ? ({ ...d, id: abbreviations[d.id] }) : d));\n    }\n\n    const xScale = {\n      type: 'linear',\n      min: normalizeDays ? 0 : 'auto',\n      max: 'auto',\n    };\n\n    const yScale = logScale\n      ? {\n        type: 'log', base: 10, min: 1, max: maxVal(data),\n      }\n      : { type: 'linear', min: 0, max: 'auto' };\n\n    const xAxisFormat = normalizeDays\n      ? undefined\n      : shortDateFormat;\n\n    const yAxisFormat = label.includes('Rate')\n      ? (x) => numeral(x).format('0.00%')\n      : (x) => numeral(x).format('0,0');\n\n    const gridYValues = logScale\n      ? [1, 10, 100, 1000, 10000, 100000, 1000000, 10000000]\n      : undefined;\n\n    const axisLeftTickValues = logScale\n      ? [1, 10, 100, 1000, 10000, 100000, 1000000, 10000000]\n      : undefined;\n\n    const bottomLegend = normalizeDays\n      // super hacky formatting but what can you do\n      ? `Number of days since ${normalizeDays}th ${group.toLowerCase().slice(0, group.length - 1)}`\n      : 'Date';\n\n    const axisBottom = {\n      orient: 'bottom',\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: normalizeDays ? 0 : -40,\n      tickValues: 10,\n      format: xAxisFormat,\n      legend: bottomLegend,\n      legendOffset: 50,\n      legendPosition: 'middle',\n    };\n\n    const axisLeft = {\n      orient: 'left',\n      tickValues: axisLeftTickValues,\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      format: yAxisFormat,\n      legend: label,\n      legendOffset: -65,\n      legendPosition: 'middle',\n    };\n\n    const legend = {\n      anchor: smallScreen ? 'top-left' : 'top-right',\n      direction: smallScreen ? 'row' : 'column',\n      justify: false,\n      translateX: smallScreen ? -65 : 100,\n      translateY: smallScreen ? -35 : 0,\n      itemsSpacing: 0,\n      itemDirection: 'left-to-right',\n      itemWidth: smallScreen ? 40 : 80,\n      itemHeight: 20,\n      itemOpacity: 0.75,\n      symbolSize: smallScreen ? 8 : 12,\n      symbolShape: 'circle',\n      symbolBorderColor: 'rgba(0, 0, 0, .5)',\n    };\n\n    const chart = (\n      <ResponsiveLine\n        data={data}\n        margin={{\n          top: 50, right: smallScreen ? 30 : 110, bottom: 65, left: 80,\n        }}\n        colors={{ scheme: 'category10' }}\n        xScale={xScale}\n        yScale={yScale}\n        axisBottom={axisBottom}\n        gridYValues={gridYValues}\n        axisLeft={axisLeft}\n        isInteractive\n        lineWidth={smallScreen ? 1 : 2}\n        pointSize={smallScreen ? 4 : 6}\n        useMesh\n        enableGridX={false}\n        enableCrosshair={false}\n        tooltip={({ point }) => {\n          // TODO: take raw values and format date\n          const {\n            serieId, color, data: { xFormatted, yFormatted },\n          } = point;\n\n          return (\n            <ChartTooltip\n              id={serieId}\n              color={color}\n              xFormat={(x) => {\n                const xInt = parseInt(x, 10);\n                return (normalizeDays ? `${xInt} days` : longDateFormat(xInt));\n              }}\n              yFormat={(y) => (label.includes('Rate') ? yAxisFormat(y) : `${yAxisFormat(y)} ${group.toLowerCase()}`)}\n              x={xFormatted.toString()}\n              y={yFormatted.toString()}\n            />\n          );\n        }}\n        legends={[legend]}\n      />\n    );\n\n    // Render chart into DOM outside of current render cycle\n    setTimeout(() => this.setState({ chart }), 0);\n  }\n\n  render() {\n    const { chart } = this.state;\n\n    return chart;\n  }\n}\n\nLineChart.propTypes = propTypes;\nLineChart.defaultProps = defaultProps;\n\nexport default LineChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport BaseLineChart from './BaseLineChart';\n\nimport { ChartData } from '../propTypes';\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  data: ChartData.isRequired,\n  updatedAt: PropTypes.string,\n  logScaleToggle: PropTypes.bool,\n  normalizeDaysToggle: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n  logScale: PropTypes.bool.isRequired,\n  normalizeDays: PropTypes.bool.isRequired,\n  onControlToggle: PropTypes.func.isRequired,\n  group: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  abbreviations: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nconst defaultProps = {\n  updatedAt: null,\n  logScaleToggle: false,\n  normalizeDaysToggle: false,\n};\n\nconst FormattedLineChart = (props) => {\n  const {\n    title,\n    data,\n    updatedAt,\n    logScaleToggle,\n    normalizeDaysToggle,\n    logScale,\n    normalizeDays,\n    onControlToggle,\n    group,\n    label,\n    abbreviations,\n  } = props;\n\n  const date = new Date(updatedAt);\n\n  const timePart = date.toLocaleTimeString([], { hour12: true, hour: '2-digit', minute: '2-digit' });\n  const datePart = date.toLocaleDateString([], { year: 'numeric', month: 'long', day: 'numeric' });\n\n  const updatedAtString = updatedAt\n    ? `Data as of ${timePart} on ${datePart}.`\n    : 'Data normally updated every 12 hours.';\n\n  return (\n    <div>\n      <Typography variant=\"h4\" style={{ marginBottom: '12px' }}>{title}</Typography>\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        gutterBottom\n        style={{ fontStyle: 'italic', marginBottom: '12px', marginTop: '12px' }}\n      >\n        {updatedAtString}\n      </Typography>\n      <FormGroup id=\"chart-toggles\" row style={{ flexDirection: 'row-reverse', marginBottom: '6px' }}>\n        <FormControlLabel\n          control={<Switch size=\"small\" checked={logScale} onChange={() => onControlToggle('logScale')} />}\n          label=\"Log Scale\"\n          disabled={!logScaleToggle}\n        />\n        <FormControlLabel\n          control={<Switch size=\"small\" checked={normalizeDays} onChange={() => onControlToggle('normalizeDays')} />}\n          label=\"Normalize Days\"\n          disabled={!normalizeDaysToggle}\n        />\n      </FormGroup>\n      <Paper\n        variant=\"outlined\"\n        style={{\n          marginTop: '12px',\n          marginBottom: '6px',\n          margin: 'auto',\n          padding: '0 0 0 0',\n        }}\n      >\n        <Hidden xsDown implementation=\"css\">\n          <Container style={{ height: '500px', maxWidth: '800px' }} disableGutters>\n            <BaseLineChart\n              data={data}\n              logScale={logScale}\n              normalizeDays={normalizeDays ? normalizeDaysToggle : undefined}\n              group={group}\n              label={label}\n              abbreviations={abbreviations}\n            />\n          </Container>\n        </Hidden>\n        <Hidden smUp implementation=\"css\">\n          <Container style={{ height: '400px', maxWidth: '800px' }} disableGutters>\n            <BaseLineChart\n              smallScreen\n              data={data}\n              logScale={logScale}\n              normalizeDays={normalizeDays ? normalizeDaysToggle : undefined}\n              group={group}\n              label={label}\n              abbreviations={abbreviations}\n            />\n          </Container>\n        </Hidden>\n      </Paper>\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        gutterBottom\n        style={{\n          textAlign: 'center', fontStyle: 'italic', marginBottom: '12px', marginTop: '12px',\n        }}\n      >\n        Source:\n        {' '}\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/CSSEGISandData/COVID-19\">Center for Systems Science and Engineering at Johns Hopkins University</a>\n        .\n      </Typography>\n    </div>\n  );\n};\n\nFormattedLineChart.propTypes = propTypes;\nFormattedLineChart.defaultProps = defaultProps;\n\nexport default FormattedLineChart;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport RightNav from '../components/RightNav';\nimport FormattedLineChart from '../components/FormattedLineChart';\n\nimport { Reducer } from '../propTypes';\nimport { GLOBAL, US } from '../actions/const';\nimport * as globalSpec from '../data-specs/global';\nimport * as usSpec from '../data-specs/united-states';\nimport { toNavSpec } from '../data-specs/utils';\n\nconst propTypes = {\n  store: PropTypes.shape({\n    global: Reducer.isRequired,\n    US: Reducer.isRequired,\n  }).isRequired,\n  match: PropTypes.shape({\n    path: PropTypes.string,\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst getNamespace = (path) => {\n  switch (path) {\n    case '/global': return GLOBAL;\n    case '/united-states': return US;\n    default: throw new Error(`Unexpected match fail 'getNamespace': ${path}`);\n  }\n};\n\nconst getSpec = (namespace) => {\n  switch (namespace) {\n    case GLOBAL: return globalSpec;\n    case US: return usSpec; // TODO;\n    default: throw new Error(`Unexpected match fail 'getSpec': ${namespace}`);\n  }\n};\n\nconst getReducer = (namespace, store) => {\n  switch (namespace) {\n    case GLOBAL: return store.global;\n    case US: return store.US; // TODO;\n    default: throw new Error(`Unexpected match fail 'getReducer': ${namespace}`);\n  }\n};\n\nconst VizPage = (props) => {\n  const {\n    store,\n    match,\n    location,\n    dispatch,\n  } = props;\n\n  const namespace = getNamespace(match.path);\n  const { spec, defaultChartId } = getSpec(namespace);\n  const reducer = getReducer(namespace, store);\n  const basePath = match.path;\n\n\n  const render = (content) => (\n    <div id=\"main-container\">\n      <Container maxWidth=\"md\" id=\"main-content\">\n        {content}\n      </Container>\n      <RightNav base={basePath} spec={toNavSpec(spec)} />\n    </div>\n  );\n\n  const chartId = location.pathname.split('/')[2];\n  const chartSpec = spec[chartId];\n\n  // redirect to default if no matches\n  if (!chartId || !chartSpec) {\n    return <Redirect to={`${basePath}/${defaultChartId}`} />;\n  }\n\n  if (reducer.loading) {\n    return render(\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: '120px' }}>\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"body2\" style={{ marginBottom: '24px', fontStyle: 'italic' }}>Fetching most recent data</Typography>\n          <CircularProgress />\n        </div>\n      </div>,\n    );\n  }\n\n  if (chartSpec.component) {\n    return render(chartSpec.component(reducer));\n  }\n\n  const chartState = reducer.chartState[chartId];\n\n  const data = chartSpec.getData(reducer);\n  const updatedAt = chartSpec.getUpdatedAt(reducer);\n\n  const onControlToggle = (key) => dispatch({\n    type: `${namespace}_FORM_CONTROL_TOGGLE`,\n    value: { chartId, update: { [key]: !chartState[key] } },\n  });\n\n  return render(\n    <FormattedLineChart\n      // from spec\n      title={chartSpec.title}\n      data={data}\n      updatedAt={updatedAt}\n      logScaleToggle={chartSpec.logScale}\n      normalizeDaysToggle={chartSpec.normalizeDays}\n      chartState={chartState}\n      group={chartSpec.group}\n      label={chartSpec.label}\n\n        // from state\n      logScale={chartState.logScale}\n      normalizeDays={chartState.normalizeDays}\n\n      // other\n      onControlToggle={onControlToggle}\n      abbreviations={reducer.abbreviations}\n    />,\n  );\n};\n\nVizPage.propTypes = propTypes;\n\nconst mapStateToProps = (store) => ({ store });\n\nexport default connect(mapStateToProps)(VizPage);\n","import React from 'react';\nimport {\n  HashRouter, Route, Switch, Redirect,\n} from 'react-router-dom';\n\nimport About from './pages/About';\nimport Nav from './pages/Nav';\nimport VizPage from './pages/VizPage';\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div style={{ display: 'flex' }}>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={About} />\n          <Route path=\"/global\" component={VizPage} />\n          <Route path=\"/united-states\" component={VizPage} />\n          <Route render={() => <Redirect to=\"/\" />} />\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","export const globalConfig = {\n  columnMap: {\n    // drop\n    'Province/State': null,\n    Lat: null,\n    Long: null,\n\n    // map column map\n    'Country/Region': 'id',\n  },\n  idMap: {\n    'Korea, South': 'South Korea',\n    'Taiwan*': 'Taiwan',\n    'United Kingdom': 'UK',\n  },\n};\n\nexport const usConfig = {\n  columnMap: {\n    UID: null,\n    iso2: null,\n    iso3: null,\n    code3: null,\n    FIPS: null,\n    Admin2: null,\n    Province_State: 'id',\n    Country_Region: null,\n    Lat: null,\n    Long_: null,\n    Combined_Key: null,\n    Population: 'population',\n  },\n  idMap: {},\n};\n\nconst isDateString = (s) => !isNaN(s); // eslint-disable-line no-restricted-globals\n\nexport const csvOptions = ({ columnMap, idMap }) => ({\n  mapHeaders: ({ header, index }) => { // eslint-disable-line no-unused-vars\n    if (Object.prototype.hasOwnProperty.call(columnMap, header)) {\n      return columnMap[header];\n    }\n\n    // m/d/y where month and day can be one or two digits\n    if (/\\d{1,2}\\/\\d{1,2}\\/\\d{2}/.test(header)) {\n      return new Date(header).getTime();\n    }\n\n    // Try to map all headers so we don't just pass through values\n    console.warn('Header not transformed:', header); // eslint-disable-line no-console\n\n    return header;\n  },\n  mapValues: ({ header, index, value }) => { // eslint-disable-line no-unused-vars\n    if (isDateString(header)) return parseInt(value, 10);\n\n    if (header === 'id' && idMap[value]) {\n      return idMap[value];\n    }\n\n    return value;\n  },\n});\n","import parseCsv from 'neat-csv';\n\nimport {\n  GLOBAL, dataUrl, timestampUrl,\n} from './const';\n\nimport { csvOptions, globalConfig, usConfig } from './csv-options';\n\nconst isDateString = (s) => !isNaN(s); // eslint-disable-line no-restricted-globals\n\n// Object.keys converts keys to strings\n// This is probably an inefficient solution, but oh well\nconst numberKeys = (obj) => Object.keys(obj).map((x) => parseInt(x, 10));\n\nconst combineRowsById = (accum, row) => {\n  const prevValue = accum[row.id] || {};\n\n  const dateKeys = numberKeys(row).filter(isDateString);\n\n  const nextValue = dateKeys.reduce((acc, key) => ({\n    ...acc,\n    [key]: row[key] + (prevValue[key] || 0),\n  }), { id: row.id });\n\n  return {\n    ...accum,\n    [row.id]: nextValue,\n  };\n};\n\nconst createDataArray = (row) => {\n  const dateKeys = numberKeys(row).filter(isDateString);\n\n  const data = dateKeys.map((key) => ({\n    x: key,\n    y: row[key],\n  }), []);\n\n  return { id: row.id, data };\n};\n\nconst fetchData = (location, dataset) => fetch(dataUrl(location, dataset))\n  .then((res) => res.text())\n  .then((x) => {\n    const config = location === GLOBAL ? globalConfig : usConfig;\n    const options = csvOptions(config);\n\n    return parseCsv(x, options);\n  })\n  .then((csv) => Object.values(csv.reduce(combineRowsById, {}))\n    .map(createDataArray));\n\nconst fetchTimestamp = (location, dataset) => fetch(timestampUrl(location, dataset))\n  .then((res) => res.json())\n  .then((data) => (data[0] ? data[0].commit.committer.date : null))\n  .catch((err) => {\n    console.error('Error fetching timestamps', err); // eslint-disable-line no-console\n    return null;\n  });\n\nexport default (namespace, dataset) => (dispatch) => Promise.all([\n  fetchData(namespace, dataset).then((rows) => dispatch({\n    type: `${namespace}_FETCHED_DATASET_${dataset}`,\n    value: rows,\n  })),\n  fetchTimestamp(namespace, dataset).then((timestamp) => dispatch({\n    type: `${namespace}_FETCHED_TIMESTAMP_${dataset}`,\n    value: timestamp,\n  })),\n]);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\n\nimport './index.css';\n\nimport { fetchGlobalData, fetchUSData } from './actions';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nstore.dispatch(fetchGlobalData());\nstore.dispatch(fetchUSData());\n","import {\n  GLOBAL, US, DEATHS, CASES,\n} from './const';\n\nimport fetchDataset from './fetch-dataset';\n\nexport const fetchGlobalData = () => (dispatch) => Promise.all([\n  fetchDataset(GLOBAL, DEATHS)(dispatch),\n  fetchDataset(GLOBAL, CASES)(dispatch),\n]).then(() => dispatch({\n  type: `${GLOBAL}_DATA_LOADED`,\n}));\n\nexport const fetchUSData = () => (dispatch) => Promise.all([\n  fetchDataset(US, DEATHS)(dispatch),\n  fetchDataset(US, CASES)(dispatch),\n]).then(() => dispatch({\n  type: `${US}_DATA_LOADED`,\n}));\n"],"sourceRoot":""}