{"version":3,"sources":["data-specs/accessors.js","data-specs/base.js","data-specs/global.js","data-specs/united-states.js","data-specs/utils.js","reducers/reducer.js","store.js","pages/About.js","components/IdSelector.js","actions/const.js","pages/LeftNav.js","components/RightNav.js","propTypes.js","components/BaseLineChart.js","components/FormattedLineChart.js","pages/VizPage.js","components/NavBar.js","App.js","actions/global-csv-options.js","actions/us-csv-options.js","actions/fetch-dataset.js","index.js","actions/index.js"],"names":["withFilters","baseAccessor","reducer","data","fs","filters","filter","id","filteredDeaths","deaths","filteredCases","cases","deathsTimestamp","casesTimestamp","computeDayOverDayChange","map","index","x","y","prev","filterBeforeDate","date","Date","getTime","dayOverDayChangeInCases","dayOverDayChangeInDeaths","mortalityRate","deathData","caseData","find","mortalityData","deathCount","caseCount","makeSpec","label","title","group","getData","getUpdatedAt","logScale","normalizeDays","Italy","US","UK","Singapore","France","Spain","Germany","idGroupings","ids","defaultChartId","spec","Base","California","Florida","Minnesota","Washington","toNavSpec","Object","values","keys","reduce","accum","existingPages","pages","updatedPages","initialChartState","initialState","allIds","chartState","loading","INITIAL_STATE","global","Global","runReducer","state","action","type","value","chartId","update","createStore","startsWith","localAction","replace","localState","console","error","applyMiddleware","thunkMiddleware","logger","About","IdSelector","props","filteredIds","onFilterToggle","subheader","ListSubheader","disableSticky","component","icon","ListItemIcon","color","fontSize","item","ListItem","key","button","onClick","ListItemText","primary","style","marginLeft","List","dense","defaultProps","allCountries","GLOBAL","CASES","path","location","dataset","dataUrl","timestampUrl","LeftNav","store","dispatch","namespace","split","getNamespace","pathname","Error","getReducer","Drawer","variant","open","PaperProps","width","Divider","marginTop","marginRight","withRouter","connect","RightNav","base","Typography","gutterBottom","paddingLeft","className","Link","underline","RouterLink","to","activeClassName","ChartData","PropTypes","arrayOf","shape","oneOfType","string","number","filterZeroValues","objectOf","bool","isRequired","func","LineChart","chart","this","renderChart","prevProps","prevState","propChange","deepEqual","stateChange","cutoff","initialData","xScale","min","max","yScale","xFormat","undefined","toLocaleDateString","month","day","gridYValues","axisBottom","orient","tickSize","tickPadding","tickValues","format","legend","legendOffset","legendPosition","axisLeft","tickRotation","margin","top","right","bottom","left","isInteractive","useMesh","enableGridX","enableSlices","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","setTimeout","setState","React","Component","FormattedLineChart","updatedAt","logScaleToggle","normalizeDaysToggle","onControlToggle","timePart","toLocaleTimeString","hour12","hour","minute","datePart","year","updatedAtString","marginBottom","textAlign","display","fontStyle","FormGroup","row","flexDirection","FormControlLabel","control","Switch","size","checked","onChange","disabled","Paper","padding","Container","height","maxWidth","disableGutters","BaseLineChart","target","rel","href","match","globalSpec","usSpec","getSpec","basePath","render","content","chartSpec","NavBar","AppBar","position","Toolbar","flex","Button","App","basename","exact","VizPage","COLUMNS_TO_DROP","Lat","Long","COLUMNS_TO_MAP","mapHeaders","header","test","warn","mapValues","isNaN","parseInt","UID","iso2","iso3","code3","FIPS","Admin2","Province_State","Country_Region","Long_","Combined_Key","Population","octokit","Octokit","isDateString","s","combineRowsById","prevValue","nextValue","acc","createDataAray","fetchData","fetch","then","res","text","parseCsv","globalCsvOptions","usCsvOptions","csv","fetchTimestamp","repos","listCommits","owner","repo","page","per_page","commit","committer","catch","err","Promise","all","rows","timestamp","ReactDOM","document","getElementById","fetchDataset"],"mappings":"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","file":"static/js/main.eb756798.chunk.js","sourcesContent":["/*\n  Assumes reducer shape of\n  {\n    cases: ChartData,\n    casesTimestamp: string,\n    deaths: ChartData,\n    deathsTimestamp, string,\n    filters: {string: bool}\n  }\n*/\n\n// base accessors\nconst deaths = (reducer) => reducer.deaths;\nconst cases = (reducer) => reducer.cases;\n\n// TODO: reducer should be made generic\nconst filters = (reducer) => reducer.filters;\n\nconst withFilters = (baseAccessor) => (reducer) => {\n  const data = baseAccessor(reducer);\n  const fs = filters(reducer);\n\n  return data.filter(({ id }) => fs[id]);\n};\n\nexport const filteredDeaths = withFilters(deaths);\nexport const filteredCases = withFilters(cases);\n\nexport const deathsTimestamp = (reducer) => reducer.deathsTimestamp;\nexport const casesTimestamp = (reducer) => reducer.casesTimestamp;\n","import {\n  filteredCases, filteredDeaths, deathsTimestamp, casesTimestamp,\n} from './accessors';\n\nconst computeDayOverDayChange = ({ id, data }) => {\n  const changes = data.map(({ x, y }, index) => {\n    const prev = data[index - 1];\n    const change = (index === 0 || prev.y === 0) ? 0 : ((y - prev.y) / prev.y);\n\n    return { x, y: change };\n  });\n\n  return { id, data: changes };\n};\n\nconst filterBeforeDate = (date) => ({ id, data }) => ({\n  id,\n  data: data.filter(({ x }) => x >= new Date(date).getTime()),\n});\n\nconst dayOverDayChangeInCases = (reducer) => filteredCases(reducer).map(computeDayOverDayChange).map(filterBeforeDate('3/5/2020'));\nconst dayOverDayChangeInDeaths = (reducer) => filteredDeaths(reducer).map(computeDayOverDayChange).map(filterBeforeDate('3/5/2020'));\n\nconst mortalityRate = (reducer) => filteredDeaths(reducer).map(({ id, data: deathData }) => {\n  // TODO: inefficient to filter cases every map\n  const caseData = filteredCases(reducer).find((x) => x.id === id).data;\n\n  const mortalityData = deathData.map(({ x, y: deathCount }, index) => {\n    const caseCount = caseData[index].y;\n    const rate = caseCount === 0 ? 0 : deathCount / caseCount;\n    return { x, y: rate };\n  });\n\n  return { id, data: mortalityData };\n}).map(filterBeforeDate('3/5/2020'));\n\nexport const defaultChartId = 'deaths-cumulative';\n\nexport const makeSpec = (label) => ({\n  // deaths\n  'deaths-cumulative': {\n    title: `Cumulative ${label} Deaths`,\n    group: 'Deaths',\n    label: 'Cumulative',\n    getData: filteredDeaths,\n    getUpdatedAt: deathsTimestamp,\n    logScale: true,\n    normalizeDays: 10,\n  },\n  'deaths-change-rate': {\n    title: `${label} Deaths Daily Rate of Change`,\n    group: 'Deaths',\n    label: 'Rate of Change',\n    getData: dayOverDayChangeInDeaths,\n    getUpdatedAt: deathsTimestamp,\n  },\n\n  // cases\n  'cases-cumulative': {\n    title: `Cumulative ${label} Cases`,\n    group: 'Cases',\n    label: 'Cumulative',\n    getData: filteredCases,\n    getUpdatedAt: casesTimestamp,\n    logScale: true,\n    normalizeDays: 50,\n  },\n  'cases-change-rate': {\n    title: `${label} Cases Daily Rate of Change`,\n    group: 'Cases',\n    label: 'Rate of Change',\n    getData: dayOverDayChangeInCases,\n    getUpdatedAt: casesTimestamp,\n  },\n\n  // other\n  'mortality-rate': {\n    title: `${label} Mortality Rate`,\n    group: 'Other',\n    label: 'Mortality Rate',\n    getData: mortalityRate,\n    // TODO: should really take most recent of the two\n    getUpdatedAt: deathsTimestamp,\n  },\n});\n","import * as Base from './base';\n\n// export const INITIAL_FILTERS\n\nexport const filters = {\n  Italy: true,\n  US: true,\n  UK: true,\n  Singapore: true,\n  France: false,\n  Spain: false,\n  Germany: false,\n  'S. Korea': false,\n};\n\nexport const idGroupings = [\n  {\n    label: 'Americas',\n    ids: ['US', 'Canada', 'Mexico', 'Brazil'],\n  },\n  {\n    label: 'Europe',\n    ids: ['UK', 'Spain', 'France', 'Germany', 'Italy', 'Switzerland', 'Belgium', 'Netherlands'],\n  },\n  {\n    label: 'APAC',\n    ids: ['Singapore', 'Taiwan', 'Japan', 'S. Korea', 'Australia'],\n  },\n];\n\n\nexport const { defaultChartId } = Base;\nexport const spec = Base.makeSpec('Global');\n","import * as Base from './base';\n\nexport const filters = {\n  California: true,\n  Florida: true,\n  Minnesota: true,\n  'New York': true,\n  Washington: true,\n};\n\nexport const idGroupings = [\n  {\n    label: 'Midwest',\n    ids: ['Minnesota', 'Iowa'],\n  },\n  {\n    label: 'West Coast',\n    ids: ['California', 'Washington', 'Oregon'],\n  },\n  {\n    label: 'East Coast',\n    ids: ['New York'],\n  },\n];\n\nexport const { defaultChartId } = Base;\nexport const spec = Base.makeSpec('US');\n","export const toNavSpec = (spec) => Object.values(Object.keys(spec).reduce((accum, id) => {\n  const { group, label } = spec[id];\n  const existingPages = accum[group] ? accum[group].pages : [];\n  const updatedPages = [...existingPages, { id, label }];\n\n  return {\n    ...accum,\n    [group]: { group, pages: updatedPages },\n  };\n}, {}));\n\nexport const initialChartState = (spec) => Object.keys(spec).reduce((accum, id) => ({\n  ...accum,\n  // normalizeDays always false for now, allow users to toggle on\n  [id]: { logScale: !!spec[id].logScale, normalizeDays: false },\n}), {});\n","import * as Global from '../data-specs/global';\nimport * as US from '../data-specs/united-states';\nimport { initialChartState } from '../data-specs/utils';\n\nconst initialState = ({ filters, spec, idGroupings }) => ({\n  cases: null,\n  casesTimestamp: null,\n  deaths: null,\n  deathsTimestamp: null,\n  allIds: null,\n  filters,\n  idGroupings,\n  chartState: initialChartState(spec),\n  loading: true,\n});\n\nconst INITIAL_STATE = {\n  global: initialState(Global),\n  US: initialState(US),\n};\n\nconst runReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCHED_DATASET_deaths':\n      return {\n        ...state,\n        deaths: action.value,\n      };\n\n    case 'FETCHED_DATASET_confirmed':\n      return {\n        ...state,\n        allIds: action.value.map((x) => x.id),\n        cases: action.value,\n      };\n\n    case 'FETCHED_TIMESTAMP_deaths':\n      return {\n        ...state,\n        deathsTimestamp: action.value,\n      };\n\n    case 'FETCHED_TIMESTAMP_confirmed':\n      return {\n        ...state,\n        casesTimestamp: action.value,\n      };\n\n    case 'TOGGLE_ID_FILTER':\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.id]: !state.filters[action.id],\n        },\n      };\n\n    case 'FORM_CONTROL_TOGGLE':\n      return {\n        ...state,\n        chartState: {\n          ...state.chartState,\n          [action.value.chartId]: {\n            ...state.chartState[action.value.chartId],\n            ...action.value.update,\n          },\n        },\n      };\n\n    case 'DATA_LOADED':\n      return {\n        ...state,\n        loading: false,\n      };\n\n    default: return state;\n  }\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  if (action.type.startsWith('global_')) {\n    const localAction = {\n      ...action,\n      type: action.type.replace('global_', ''),\n    };\n\n    const localState = runReducer(state.global, localAction);\n\n    return { ...state, global: localState };\n  }\n\n  if (action.type.startsWith('US_')) {\n    const localAction = {\n      ...action,\n      type: action.type.replace('US_', ''),\n    };\n\n    const localState = runReducer(state.US, localAction);\n\n    return { ...state, US: localState };\n  }\n\n  console.error('Unexpected action type', action.type);\n  return state;\n};\n","import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport reducer from './reducers/reducer';\n\nexport default createStore(\n  reducer,\n  applyMiddleware(\n    thunkMiddleware,\n    logger,\n  ),\n);\n","import React from 'react';\n\nconst About = () => (\n  <p>About</p>\n);\n\nexport default About;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport CheckIcon from '@material-ui/icons/Check';\n\n\nconst propTypes = {\n  // allCountries: PropTypes.arrayOf(PropTypes.string),\n  filteredIds: PropTypes.objectOf(PropTypes.bool).isRequired,\n  idGroupings: PropTypes.array.isRequired,\n  onFilterToggle: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  allCountries: null,\n};\n\nconst IdSelector = (props) => {\n  const { filteredIds, idGroupings, onFilterToggle } = props;\n\n  const subheader = (label) => <ListSubheader disableSticky component=\"div\">{label}</ListSubheader>;\n\n  const icon = <ListItemIcon><CheckIcon color=\"primary\" fontSize=\"small\" /></ListItemIcon>;\n\n  const item = (id) => (\n    <ListItem key={id} button onClick={() => onFilterToggle(id)}>\n      <ListItemText key={id} primary={id} style={{ marginLeft: '24px' }} />\n      {filteredIds[id] ? icon : null}\n    </ListItem>\n  );\n\n  return idGroupings.map(({ label, ids }) => (\n    <List component=\"nav\" key={label} dense subheader={subheader(label)}>\n      {ids.map(item)}\n    </List>\n  ));\n};\n\nIdSelector.propTypes = propTypes;\nIdSelector.defaultProps = defaultProps;\n\nexport default IdSelector;\n","// locations\nexport const US = 'US';\nexport const GLOBAL = 'global';\n\n// datasets\nexport const DEATHS = 'deaths';\nexport const CASES = 'confirmed';\n\nexport const OWNER = 'CSSEGISandData'\nexport const REPO = 'COVID-19';\n\nconst BASE_DATA_URL = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master';\nconst BASE_TIMESTAMP_URL = 'https://api.github.com/repos/CSSEGISandData/COVID-19/commits';\n\nconst BASE_PATH = 'csse_covid_19_data/csse_covid_19_time_series';\n\n// helpers\nexport const path = (location, dataset) => `${BASE_PATH}/time_series_covid19_${dataset}_${location}.csv`;\nexport const dataUrl = (location, dataset) => `${BASE_DATA_URL}/${path(location, dataset)}`;\n\nconst f = (s) => s.replace(/\\//g, '%2F');\nexport const timestampUrl = (location, dataset) => `${BASE_TIMESTAMP_URL}?path=${f(path(location, dataset))}&page=1&per_page=1&ref=master`;\n\n// data\nexport const GLOBAL_DEATHS_URL = dataUrl(GLOBAL, DEATHS);\nexport const GLOBAL_CASES_URL = dataUrl(GLOBAL, CASES);\n\n// timestamps\nexport const GLOBAL_DEATHS_TIMESTAMP_URL = timestampUrl(GLOBAL, DEATHS);\nexport const GLOBAL_CASES_TIMESTAMP_URL = timestampUrl(GLOBAL, CASES);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\n\nimport IdSelector from '../components/IdSelector';\nimport { GLOBAL, US } from '../actions/const';\n\nconst propTypes = {\n  // allCountries: PropTypes.arrayOf(PropTypes.string),\n  // filters: PropTypes.objectOf(PropTypes.bool).isRequired,\n  store: PropTypes.any.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n  }).isRequired,\n};\n\nconst defaultProps = {\n  // allCountries: null,\n};\n\n// TODO: should pass some state around!\n// Think this would include hooking react-router into the store\nconst getNamespace = (path) => {\n  switch (path.split('/')[1]) {\n    case 'global': return GLOBAL;\n    case 'united-states': return US;\n    default: return null; // Expected for non-data pages\n  }\n};\n\nconst getReducer = (namespace, store) => {\n  switch (namespace) {\n    case GLOBAL: return store.global;\n    case US: return store.US; // TODO;\n    default: throw new Error(`Unexpected match fail 'getReducer': ${namespace}`);\n  }\n};\n\nconst LeftNav = (props) => {\n  const { store, dispatch, location } = props;\n\n  // TODO: this is a pretty sketchy way to inspect store state\n  const namespace = getNamespace(location.pathname);\n  const reducer = namespace && getReducer(namespace, store);\n  const { filters, allIds, idGroupings } = reducer || {};\n\n  const onFilterToggle = (id) => dispatch({\n    type: `${namespace}_TOGGLE_ID_FILTER`,\n    id,\n  });\n\n  return (\n    <nav id=\"left-nav\">\n      <Drawer\n        variant=\"permanent\"\n        open\n        PaperProps={{ style: { width: '240px' } }}\n      >\n        <Divider style={{ marginTop: '64px', marginRight: '24px' }} />\n        <IdSelector\n          filteredIds={filters}\n          idGroupings={idGroupings}\n          onFilterToggle={onFilterToggle}\n        />\n      </Drawer>\n    </nav>\n  );\n};\n\nLeftNav.propTypes = propTypes;\nLeftNav.defaultProps = defaultProps;\n\nconst mapStateToProps = (store) => ({ store });\n\nexport default withRouter(connect(mapStateToProps)(LeftNav));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink as RouterLink } from 'react-router-dom';\n\nimport List from '@material-ui/core/List';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import ListSubheader from '@material-ui/core/ListSubheader';\n\nconst propTypes = {\n  spec: PropTypes.arrayOf(\n    PropTypes.shape({\n      group: PropTypes.string.isRequired,\n      pages: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          label: PropTypes.string.isRequired,\n        }),\n      ).isRequired,\n    }),\n  ).isRequired,\n  base: PropTypes.string.isRequired,\n};\n\n// <List component=\"nav\" dense\n//    subheader={<ListSubheader disableSticky component=\"div\">Deaths</ListSubheader>}>\n//   <ListItem button><ListItemText primary=\"Cumulative\" /></ListItem>\n//   <ListItem button><ListItemText primary=\"Daily\" /></ListItem>\n//   <ListItem button><ListItemText primary=\"Rate of Change\" /></ListItem>\n//   <ListItem button><ListItemText primary=\"Per Capita\" /></ListItem>\n// </List>\n// <List component=\"nav\" dense\n//    subheader={<ListSubheader disableSticky component=\"div\">Cases</ListSubheader>}>\n//   <ListItem button><ListItemText primary=\"Cumulative\" /></ListItem>\n//   <ListItem button><ListItemText primary=\"Daily\" /></ListItem>\n//   <ListItem button><ListItemText primary=\"Rate of Change\" /></ListItem>\n//   <ListItem button><ListItemText primary=\"Per Capita\" /></ListItem>\n// </List>\n// <List component=\"nav\" dense\n//    subheader={<ListSubheader disableSticky component=\"div\">Other</ListSubheader>}>\n//   <ListItem button><ListItemText primary=\"Mortality rate\" /></ListItem>\n//   <ListItem button><ListItemText primary=\"Full table\" /></ListItem>\n// </List>\n\nconst RightNav = ({ spec, base }) => (\n  <div id=\"right-nav\">\n    {spec.map(({ group, pages }) => (\n      <List\n        key={group}\n        component=\"nav\"\n      >\n        <Typography variant=\"body1\" gutterBottom style={{ paddingLeft: '12px' }}>{group}</Typography>\n        {pages.map(({ id, label }) => (\n          <li className=\"right-nav-item\" key={id}>\n            <Link\n              color=\"textSecondary\"\n              underline=\"none\"\n              variant=\"body1\"\n              component={RouterLink}\n              to={`${base}/${id}`}\n              activeClassName=\"active\"\n            >\n              {label}\n            </Link>\n          </li>\n        ))}\n      </List>\n    ))}\n  </div>\n);\n\nRightNav.propTypes = propTypes;\n\nexport default RightNav;\n","import PropTypes from 'prop-types';\n\nexport const ChartData = PropTypes.arrayOf(\n  PropTypes.shape({\n    x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    y: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  }),\n);\n\nexport const Reducer = PropTypes.shape({\n  cases: ChartData,\n  deaths: ChartData,\n  filters: PropTypes.objectOf(PropTypes.bool).isRequired,\n  chartState: PropTypes.objectOf(\n    PropTypes.shape({\n      logScale: PropTypes.bool,\n      normalizeDays: PropTypes.bool,\n    }),\n  ).isRequired,\n});\n\nexport const ChartSpec = PropTypes.shape({\n  title: PropTypes.string,\n  group: PropTypes.string,\n  label: PropTypes.string,\n  getData: PropTypes.func,\n  getUpdatedAt: PropTypes.func,\n  logScale: PropTypes.bool,\n  normalizeDays: PropTypes.number,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ResponsiveLine } from '@nivo/line';\n\nimport deepEqual from 'deep-equal';\n\nimport { ChartData } from '../propTypes';\n\nconst propTypes = {\n  data: ChartData.isRequired,\n  logScale: PropTypes.bool,\n  normalizeDays: PropTypes.number,\n};\n\nconst defaultProps = {\n  logScale: false,\n  normalizeDays: null,\n};\n\nconst mapNormalizeDays = (cutoff, values) => values.map((item) => {\n  const data = item.data\n    .filter(({ y }) => y >= cutoff)\n    .map(({ y }, index) => ({ x: index, y }));\n\n  return { ...item, data };\n});\n\nconst filterZeroValues = ({ id, data }) => ({\n  id,\n  data: data.filter(({ y }) => y !== 0),\n});\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chart: null,\n    };\n  }\n\n  // A little trickery in these lifecycle methods in order to render the chart\n  // outside of the current render cycle.\n  // Chart is slow and heavy to re-render,\n  // so we want to avoid batching with other updates that should be fast\n  componentDidMount() {\n    this.renderChart();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const propChange = !deepEqual(prevProps, this.props);\n\n    // This is a little sketchy... we need to see if state changed but comparing the\n    // chart would lead to an infitine loop\n    // (because state changes lead to chart changes lead to state changes)\n    // So as a quick fix just remove the chart value for comparision\n    const stateChange = !deepEqual({ ...prevState, chart: null }, { ...this.state, chart: null });\n\n    if (propChange || stateChange) {\n      this.renderChart();\n    }\n  }\n\n  renderChart() {\n    const {\n      data: initialData, logScale, normalizeDays,\n    } = this.props;\n\n    let data = initialData;\n    if (normalizeDays) {\n      data = mapNormalizeDays(normalizeDays, data);\n    }\n\n    if (logScale) {\n      // filter zero values\n      data = data.map(filterZeroValues);\n    }\n\n    const xScale = {\n      type: 'linear',\n      min: normalizeDays ? 0 : 'auto',\n      max: 'auto',\n    };\n\n    const yScale = logScale\n      ? { type: 'log', base: 10, max: 1000000 } // todo find max automatically\n      : { type: 'linear', min: 0, max: 'auto' };\n\n    const xFormat = normalizeDays\n      ? undefined\n      : (x) => new Date(x).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n\n    const gridYValues = logScale\n      ? [10, 100, 1000, 10000, 100000, 1000000, 10000000]\n      : undefined;\n\n    const axisLeftTickValues = logScale\n      ? [10, 100, 1000, 10000, 100000, 1000000, 10000000]\n      : undefined;\n\n    const axisBottom = {\n      orient: 'bottom',\n      tickSize: 5,\n      tickPadding: 5,\n      // tickRotation: -66,\n      tickValues: 10,\n      format: xFormat,\n      legend: 'Number of days since Nth case',\n      legendOffset: 36,\n      legendPosition: 'middle',\n    };\n\n    const axisLeft = {\n      orient: 'left',\n      tickValues: axisLeftTickValues,\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'Count',\n      legendOffset: -50,\n      legendPosition: 'middle',\n    };\n\n    const legend = {\n      anchor: 'top-right',\n      direction: 'column',\n      justify: false,\n      translateX: 100,\n      translateY: 0,\n      itemsSpacing: 0,\n      itemDirection: 'left-to-right',\n      itemWidth: 80,\n      itemHeight: 20,\n      itemOpacity: 0.75,\n      symbolSize: 12,\n      symbolShape: 'circle',\n      symbolBorderColor: 'rgba(0, 0, 0, .5)',\n      effects: [{\n        on: 'hover',\n        style: {\n          itemBackground: 'rgba(0, 0, 0, .03)',\n          itemOpacity: 1,\n        },\n      }],\n    };\n\n    const chart = (\n      <ResponsiveLine\n        data={data}\n        margin={{\n          top: 50, right: 110, bottom: 50, left: 60,\n        }}\n        xScale={xScale}\n        yScale={yScale}\n        xFormat={xFormat}\n        axisBottom={axisBottom}\n        gridYValues={gridYValues}\n        axisLeft={axisLeft}\n        isInteractive\n// pointSize={6}\n        useMesh\n        enableGridX={false}\n// sliceTooltip={(slice) => {\n//   console.log(slice)\n//   return <p>foo</p>;\n// }}\n        enableSlices=\"x\"\n        legends={[legend]}\n      />\n    );\n\n    // Render chart into DOM outside of current render cycle\n    setTimeout(() => this.setState({ chart }), 0);\n  }\n\n  render() {\n    const { chart } = this.state;\n\n    return chart;\n  }\n}\n\nLineChart.propTypes = propTypes;\nLineChart.defaultProps = defaultProps;\n\nexport default LineChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nimport BaseLineChart from './BaseLineChart';\n\nimport { ChartData } from '../propTypes';\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  data: ChartData.isRequired,\n  updatedAt: PropTypes.string,\n  logScaleToggle: PropTypes.bool,\n  normalizeDaysToggle: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n  logScale: PropTypes.bool.isRequired,\n  normalizeDays: PropTypes.bool.isRequired,\n  onControlToggle: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  updatedAt: null,\n  logScaleToggle: false,\n  normalizeDaysToggle: false,\n};\n\nconst FormattedLineChart = (props) => {\n  const {\n    title,\n    data,\n    updatedAt,\n    logScaleToggle,\n    normalizeDaysToggle,\n    logScale,\n    normalizeDays,\n    onControlToggle,\n  } = props;\n\n  const date = new Date(updatedAt);\n\n  const timePart = date.toLocaleTimeString([], { hour12: true, hour: '2-digit', minute: '2-digit' });\n  const datePart = date.toLocaleDateString([], { year: 'numeric', month: 'long', day: 'numeric' });\n\n  const updatedAtString = updatedAt\n    ? `Data as of ${timePart} on ${datePart}.`\n    : 'Data normally updated every 12 hours.';\n\n  return (\n    <div>\n      <Typography variant=\"h4\" style={{ marginBottom: '12px', textAlign: 'center' }}>{title}</Typography>\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        gutterBottom\n        style={{\n          textAlign: 'center', fontStyle: 'italic', marginBottom: '12px', marginTop: '12px',\n        }}\n      >\n        {updatedAtString}\n      </Typography>\n      <FormGroup id=\"chart-toggles\" row style={{ flexDirection: 'row-reverse', marginBottom: '6px' }}>\n        <FormControlLabel\n          control={<Switch size=\"small\" checked={logScale} onChange={() => onControlToggle('logScale')} />}\n          label=\"Log Scale\"\n          disabled={!logScaleToggle}\n        />\n        <FormControlLabel\n          control={<Switch size=\"small\" checked={normalizeDays} onChange={() => onControlToggle('normalizeDays')} />}\n          label=\"Normalize Days\"\n          disabled={!normalizeDaysToggle}\n        />\n      </FormGroup>\n      <Paper\n        variant=\"outlined\"\n        style={{\n          marginTop: '12px',\n          marginBottom: '6px',\n          margin: 'auto',\n          padding: '0 32px 18px',\n        }}\n      >\n        <Container style={{ height: '500px', maxWidth: '800px' }} disableGutters>\n          <BaseLineChart\n            data={data}\n            logScale={logScale}\n            normalizeDays={normalizeDays ? normalizeDaysToggle : undefined}\n          />\n        </Container>\n      </Paper>\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        gutterBottom\n        style={{\n          textAlign: 'center', fontStyle: 'italic', marginBottom: '12px', marginTop: '12px',\n        }}\n      >\n        Source:\n        {' '}\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/CSSEGISandData/COVID-19\">Center for Systems Science and Engineering at Johns Hopkins University</a>\n        .\n      </Typography>\n    </div>\n  );\n};\n\nFormattedLineChart.propTypes = propTypes;\nFormattedLineChart.defaultProps = defaultProps;\n\nexport default FormattedLineChart;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Container from '@material-ui/core/Container';\n\nimport RightNav from '../components/RightNav';\nimport FormattedLineChart from '../components/FormattedLineChart';\n\nimport { Reducer } from '../propTypes';\nimport { GLOBAL, US } from '../actions/const';\nimport * as globalSpec from '../data-specs/global';\nimport * as usSpec from '../data-specs/united-states';\nimport { toNavSpec } from '../data-specs/utils';\n\nconst propTypes = {\n  store: PropTypes.shape({\n    global: Reducer.isRequired,\n    US: Reducer.isRequired,\n  }).isRequired,\n  match: PropTypes.shape({\n    path: PropTypes.string,\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst getNamespace = (path) => {\n  switch (path) {\n    case '/global': return GLOBAL;\n    case '/united-states': return US;\n    default: throw new Error(`Unexpected match fail 'getNamespace': ${path}`);\n  }\n};\n\nconst getSpec = (namespace) => {\n  switch (namespace) {\n    case GLOBAL: return globalSpec;\n    case US: return usSpec; // TODO;\n    default: throw new Error(`Unexpected match fail 'getSpec': ${namespace}`);\n  }\n};\n\nconst getReducer = (namespace, store) => {\n  switch (namespace) {\n    case GLOBAL: return store.global;\n    case US: return store.US; // TODO;\n    default: throw new Error(`Unexpected match fail 'getReducer': ${namespace}`);\n  }\n};\n\nconst VizPage = (props) => {\n  const {\n    store,\n    match,\n    location,\n    dispatch,\n  } = props;\n\n  const namespace = getNamespace(match.path);\n  const { spec, defaultChartId } = getSpec(namespace);\n  const reducer = getReducer(namespace, store);\n  const basePath = match.path;\n\n  const render = (content) => (\n    <div id=\"main-container\">\n      <Container maxWidth=\"md\" id=\"main-content\">\n        {content}\n      </Container>\n      <RightNav base={basePath} spec={toNavSpec(spec)} />\n    </div>\n  );\n\n  const chartId = location.pathname.split('/')[2];\n  const chartSpec = spec[chartId];\n\n  // redirect to default if no matches\n  if (!chartId || !chartSpec) {\n    return <Redirect to={`${basePath}/${defaultChartId}`} />;\n  }\n\n  if (reducer.loading) {\n    return render(<p>Loading...</p>);\n  }\n\n  const chartState = reducer.chartState[chartId];\n\n  const data = chartSpec.getData(reducer);\n  const updatedAt = chartSpec.getUpdatedAt(reducer);\n\n  const onControlToggle = (key) => dispatch({\n    type: `${namespace}_FORM_CONTROL_TOGGLE`,\n    value: { chartId, update: { [key]: !chartState[key] } },\n  });\n\n  return render(\n    <FormattedLineChart\n        // from spec\n      title={chartSpec.title}\n      data={data}\n      updatedAt={updatedAt}\n      logScaleToggle={chartSpec.logScale}\n      normalizeDaysToggle={chartSpec.normalizeDays}\n      chartState={chartState}\n\n        // from state\n      logScale={chartState.logScale}\n      normalizeDays={chartState.normalizeDays}\n\n      // other\n      onControlToggle={onControlToggle}\n    />,\n  );\n};\n\nVizPage.propTypes = propTypes;\n\nconst mapStateToProps = (store) => ({ store });\n\nexport default connect(mapStateToProps)(VizPage);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst NavBar = () => (\n  <AppBar position=\"fixed\" color=\"default\" id=\"top-nav\">\n    <Toolbar>\n      <Typography variant=\"h6\" style={{ flex: 'auto' }}>Covid Dashboard</Typography>\n      <div>\n        <Button color=\"inherit\" component={Link} to=\"/\">About</Button>\n        <Button color=\"inherit\" component={Link} to=\"/global\">Global</Button>\n        <Button color=\"inherit\" component={Link} to=\"/united-states\">United States</Button>\n      </div>\n    </Toolbar>\n  </AppBar>\n);\n// <Button color=\"inherit\" component={Link} to=\"/experiments\">Experiments</Button>\n\nexport default NavBar;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport About from './pages/About';\nimport LeftNav from './pages/LeftNav';\nimport VizPage from './pages/VizPage';\n\nimport NavBar from './components/NavBar';\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div style={{ display: 'flex' }}>\n        <NavBar />\n        <LeftNav />\n        <Route exact path=\"/\" component={About} />\n        <Route path=\"/global\" component={VizPage} />\n        <Route path=\"/united-states\" component={VizPage} />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const COLUMNS_TO_DROP = {\n  'Province/State': true,\n  Lat: true,\n  Long: true,\n};\n\nconst COLUMNS_TO_MAP = {\n  'Country/Region': 'id',\n};\n\nconst isDateString = (s) => !isNaN(s); // eslint-disable-line no-restricted-globals\n\nexport default {\n  mapHeaders: ({ header, index }) => { // eslint-disable-line no-unused-vars\n    if (COLUMNS_TO_DROP[header]) return null;\n    if (COLUMNS_TO_MAP[header]) return COLUMNS_TO_MAP[header];\n\n    // m/d/y where month and day can be one or two digits\n    if (/\\d{1,2}\\/\\d{1,2}\\/\\d{2}/.test(header)) {\n      return new Date(header).getTime();\n    }\n\n    console.warn('Header not transformed:', header); // eslint-disable-line no-console\n\n    return header;\n  },\n  mapValues: ({ header, index, value }) => { // eslint-disable-line no-unused-vars\n    if (isDateString(header)) return parseInt(value, 10);\n\n    if (header === 'id') {\n      switch (value) {\n        case 'Korea, South': return 'S. Korea';\n        case 'Taiwan*': return 'Taiwan';\n        case 'United Kingdom': return 'UK';\n\n        default: return value;\n      }\n    }\n\n    return value;\n  },\n};\n","const COLUMNS_TO_DROP = {\n  UID: true,\n  iso2: true,\n  iso3: true,\n  code3: true,\n  FIPS: true,\n  Admin2: true,\n  Province_State: false,\n  Country_Region: true,\n  Lat: true,\n  Long_: true,\n  Combined_Key: true,\n  Population: false,\n};\n\nconst COLUMNS_TO_MAP = {\n  Province_State: 'id',\n  Population: 'population',\n};\n\nconst isDateString = (s) => !isNaN(s); // eslint-disable-line no-restricted-globals\n\nexport default {\n  mapHeaders: ({ header, index }) => { // eslint-disable-line no-unused-vars\n    if (COLUMNS_TO_DROP[header]) return null;\n    if (COLUMNS_TO_MAP[header]) return COLUMNS_TO_MAP[header];\n\n    // m/d/y where month and day can be one or two digits\n    if (/\\d{1,2}\\/\\d{1,2}\\/\\d{2}/.test(header)) {\n      return new Date(header).getTime();\n    }\n\n    console.warn('Header not transformed:', header); // eslint-disable-line no-console\n\n    return header;\n  },\n  mapValues: ({ header, index, value }) => { // eslint-disable-line no-unused-vars\n    if (isDateString(header)) return parseInt(value, 10);\n\n    return value;\n  },\n};\n","import parseCsv from 'neat-csv';\nimport { Octokit } from '@octokit/rest';\n\nimport {\n  GLOBAL, dataUrl, path, OWNER, REPO,\n} from './const';\n\nimport globalCsvOptions from './global-csv-options';\nimport usCsvOptions from './us-csv-options';\n\nconst octokit = new Octokit();\n\nconst isDateString = (s) => !isNaN(s); // eslint-disable-line no-restricted-globals\n\nconst combineRowsById = (accum, row) => {\n  const prevValue = accum[row.id] || {};\n\n  const dateKeys = Object.keys(row).filter(isDateString);\n\n  const nextValue = dateKeys.reduce((acc, key) => ({\n    ...acc,\n    [key]: row[key] + (prevValue[key] || 0),\n  }), { id: row.id });\n\n  return {\n    ...accum,\n    [row.id]: nextValue,\n  };\n};\n\nconst createDataAray = (row) => {\n  const dateKeys = Object.keys(row).filter(isDateString);\n\n  const data = dateKeys.map((key) => ({\n    x: key,\n    y: row[key],\n  }), []);\n\n  return { id: row.id, data };\n};\n\nconst fetchData = (location, dataset) => fetch(dataUrl(location, dataset))\n  .then((res) => res.text())\n  .then((x) => parseCsv(x, (location === GLOBAL ? globalCsvOptions : usCsvOptions)))\n  .then((csv) => Object.values(csv.reduce(combineRowsById, {}))\n    .map(createDataAray));\n\nconst fetchTimestamp = (location, dataset) => octokit.repos.listCommits({\n  owner: OWNER,\n  repo: REPO,\n  page: 1,\n  per_page: 1,\n  path: path(location, dataset),\n}).then(({ data }) => (data[0] ? data[0].commit.committer.date : null))\n  .catch((err) => {\n    console.error('Error fetching timestamps', err); // eslint-disable-line no-console\n    return null;\n  });\n\nexport default (namespace, dataset) => (dispatch) => Promise.all([\n  fetchData(namespace, dataset).then((rows) => dispatch({\n    type: `${namespace}_FETCHED_DATASET_${dataset}`,\n    value: rows,\n  })),\n  fetchTimestamp(namespace, dataset).then((timestamp) => dispatch({\n    type: `${namespace}_FETCHED_TIMESTAMP_${dataset}`,\n    value: timestamp,\n  })),\n]);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\n\nimport './index.css';\n\nimport { fetchGlobalData, fetchUSData } from './actions';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nstore.dispatch(fetchGlobalData());\nstore.dispatch(fetchUSData());\n","import {\n  GLOBAL, US, DEATHS, CASES,\n} from './const';\n\nimport fetchDataset from './fetch-dataset';\n\nexport const fetchGlobalData = () => (dispatch) => Promise.all([\n  fetchDataset(GLOBAL, DEATHS)(dispatch),\n  fetchDataset(GLOBAL, CASES)(dispatch),\n]).then(() => dispatch({\n  type: `${GLOBAL}_DATA_LOADED`,\n}));\n\nexport const fetchUSData = () => (dispatch) => Promise.all([\n  fetchDataset(US, DEATHS)(dispatch),\n  fetchDataset(US, CASES)(dispatch),\n]).then(() => dispatch({\n  type: `${US}_DATA_LOADED`,\n}));\n"],"sourceRoot":""}